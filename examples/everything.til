import stdio as std
import dict
import math
import context

# Strings:
set first_name "ClÃ©ber"
set last_name "Zavadniak"
set full_name "$first_name $last_name"

# Basic math:
set x 1.234
set y 4.321
set z1 [math.run $x + $y]
set z2 [$x + $y > fill > math.run]

# These 2 are equivalent:
std.out "z:$z"
"z:$z" > fill > std.out
# (Every value is a "function" that returns itself)


# Lists:
set l [list.create a b c d e f]
set c [list.index $l 2]
set c ]$l > list.index 2]

# Dictionaries
set coordinates [dict.create {
    set name "the name"
    set x 12.34
    set y 43.21
    set z 320
    set index 1
}]

# Functions/procedures
proc fs {} {
    return "fs was called!"
}
fs > std.out

proc f {x} {
    return [$x + 1 > math.run]
}

set inc 1
set x [$inc > f]
$x > fill > std.out

# Functions calls:
# Nested calls are kind of ugly...
set result [f [g [h [i [j $x]]]]]
# So we provide some syntatic sugar for that:
set result [$x > j  > i > h > g > f]
